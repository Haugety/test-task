{"version":3,"sources":["components/Header.js","components/Form.js","components/Search.js","components/Task.js","components/Main.js","components/Footer.js","utils/data.js","components/App.js","index.js"],"names":["Header","className","Form","tasks","onAddTask","React","useState","name","setName","date","setDate","validationErrors","setValidationErrors","action","onSubmit","evt","preventDefault","id","length","split","join","type","disabled","onChange","value","target","errors","placeholder","autoComplete","minLength","required","maxLength","Search","onSearch","searchField","setSearchField","Task","task","taskId","taskText","taskDate","removeTask","onTaskSave","isEditing","setIsEditing","column","onClick","Main","handleSubmit","handleSearch","sortMethod","handleTaskDelete","handleTaskSave","handleIdSort","handleNameSort","handleDateSort","cols","map","key","Footer","defaultTasks","App","initialTasks","setInitialTasks","setTasks","sort","data","fieldOfSort","setFieldOfSort","newTasks","concat","string","toLowerCase","filter","t","includes","method","task1","task2","date1","Date","reverse","date2","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b83c7b9e.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header() {\n  return (\n\n    <header className=\"header\">\n      <div className=\"header__title-container\">\n        <h1 className=\"header__title\">tasks+table</h1>\n      </div>\n    </header>\n\n  );\n}\n","import React from 'react';\n\nexport default function Form({ tasks, onAddTask }) {\n\n  const [name, setName] = React.useState('');\n  const [date, setDate] = React.useState('');\n  const [validationErrors, setValidationErrors] = React.useState({\n    name: true,\n    date: true\n  });\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    onAddTask([{\n      id: tasks.length + 1,\n      name: name,\n      date: date.split(/\\W/).join('.')\n    }]);\n    setName('');\n    setDate('');\n    setValidationErrors({\n      name: true,\n      date: true\n    });\n  }\n\n  function handleNameChange(evt) {\n    const { value } = evt.target;\n    let errors = validationErrors;\n\n    setName(value);\n\n    if (value.length < 2) {\n      errors.name = true;\n    } else {\n      errors.name = false;\n    }\n\n    setValidationErrors(errors);\n  }\n\n  function handleDateChange(evt) {\n    const { value } = evt.target;\n    let errors = validationErrors;\n\n    setDate(value);\n\n    if (value.length !== 10) {\n      errors.date = true;\n    } else {\n      errors.date = false;\n    }\n\n    setValidationErrors(errors);\n  }\n\n  return (\n\n    <form action=\"url\" className=\"form\" onSubmit={handleSubmit}>\n\n      <button\n        type=\"submit\"\n        className={\n          `form__submit\n          ${(validationErrors.name || validationErrors.date) || (!name || !date)\n            ? 'form__submit_disabled'\n            : ''}`}\n        disabled={(validationErrors.name || validationErrors.date) || !name || !date}\n      >\n        Добавить\n      </button>\n      <input\n        onChange={handleNameChange}\n        type=\"text\"\n        placeholder=\"Новая задача\"\n        value={name || ''}\n        autoComplete=\"on\"\n        className=\"form__task-text\"\n        minLength=\"2\"\n        required\n      />\n      <input\n        onChange={handleDateChange}\n        type=\"text\"\n        placeholder=\"дд.мм.гггг\"\n        value={date || ''}\n        autoComplete=\"on\"\n        className=\"form__task-date\"\n        minLength=\"10\"\n        maxLength=\"10\"\n        required\n      />\n\n    </form>\n\n  );\n}\n","import React from 'react';\n\nexport default function Search({ onSearch }) {\n\n  const [searchField, setSearchField] = React.useState('');\n\n  function handleSearch(evt) {\n    const { value } = evt.target;\n    setSearchField(value);\n    onSearch(value);\n  }\n\n  return (\n\n    <input onChange={handleSearch} type=\"text\" placeholder=\"Найти задачу\" value={searchField || ''} autoComplete=\"on\" className=\"search\" />\n\n  );\n}\n","import React from 'react';\n\nexport default function Task({\n  task,\n  taskId,\n  taskText,\n  taskDate,\n  removeTask,\n  onTaskSave\n}) {\n\n  const [isEditing, setIsEditing] = React.useState(false);\n  const [name, setName] = React.useState(taskText);\n  const [date, setDate] = React.useState(taskDate);\n  const [validationErrors, setValidationErrors] = React.useState({\n    name: false,\n    date: false\n  });\n\n  function handleRemove() {\n    removeTask(task);\n  }\n\n  function onEdit() {\n    setIsEditing(true);\n  }\n\n  function handleNameChange(evt) {\n    const { value } = evt.target;\n    let errors = validationErrors;\n\n    setName(value);\n\n    if (value.length < 2) {\n      errors.name = true;\n    } else {\n      errors.name = false;\n    }\n\n    setValidationErrors(errors);\n  }\n\n  function handleDateChange(evt) {\n    const { value } = evt.target;\n    let errors = validationErrors;\n\n    setDate(value);\n\n    if (value.length !== 10) {\n      errors.date = true;\n    } else {\n      errors.date = false;\n    }\n\n    setValidationErrors(errors);\n  }\n\n  function handleSave() {\n    onTaskSave(task, {\n      name: name,\n      date: date\n    });\n    setIsEditing(false);\n    setValidationErrors({\n      name: false,\n      date: false\n    });\n  }\n\n  return (\n\n    <tr className=\"table__task-row\">\n      <td column=\"1\" className=\"table__cell table__task-cell table__cell_id\">{taskId}</td>\n      <td column=\"2\" className=\"table__cell table__task-cell table__cell_name\">\n        {isEditing ?\n          <input\n            onChange={handleNameChange}\n            type=\"text\"\n            placeholder=\"Задача\"\n            value={name}\n            autoComplete=\"on\"\n            className=\"table__cell_edit-input\"\n            minLength=\"2\"\n            required\n          />\n          : taskText\n        }\n      </td>\n      <td column=\"3\" className=\"table__cell table__task-cell table__cell_date\">\n        {isEditing ?\n          <input\n            onChange={handleDateChange}\n            type=\"text\"\n            placeholder=\"дд.мм.гггг\"\n            value={date}\n            autoComplete=\"on\"\n            className=\"table__cell_edit-input\"\n            minLength=\"10\"\n            maxLength=\"10\"\n            required\n          />\n          : taskDate\n        }\n      </td>\n      <td column=\"4\" className=\"table__cell table__task-cell table__cell_options\">\n        {isEditing ?\n          <button\n            type=\"button\"\n            className={\n              `table__cell_options-edit table__cell_options-edit_save\n              ${(validationErrors.name || validationErrors.date) || (!name || !date) ?\n                'table__cell_options-edit_save-disabled'\n                : ''\n              }`\n            }\n            onClick={handleSave}\n            disabled={(validationErrors.name || validationErrors.date) || !name || !date}\n          >\n          </button>\n          : <button type=\"button\" className=\"table__cell_options-edit\" onClick={onEdit}></button>\n        }\n        <button type=\"button\" className=\"table__cell_options-remove\" onClick={handleRemove}></button>\n      </td>\n    </tr>\n\n  );\n}\n","import React from 'react';\nimport Form from './Form';\nimport Search from './Search';\nimport Task from './Task';\n\n\nexport default function Main({\n  tasks,\n  handleSubmit,\n  handleSearch,\n  sortMethod,\n  handleTaskDelete,\n  handleTaskSave,\n  handleIdSort,\n  handleNameSort,\n  handleDateSort\n}) {\n\n  function onIdSort() {\n    handleIdSort(tasks, sortMethod);\n  }\n\n  function onNameSort() {\n    handleNameSort(tasks, sortMethod);\n  }\n\n  function onDateSort() {\n    handleDateSort(tasks, sortMethod);\n  }\n\n  return (\n\n    <main className=\"main\">\n\n      <section className=\"main__content\">\n\n        <Form tasks={tasks} onAddTask={handleSubmit} />\n\n        <Search onSearch={handleSearch} />\n\n        <table cols=\"4\" className=\"table\">\n          <thead>\n            <tr className=\"table__title-row\">\n              <td column=\"1\" className=\"table__cell table__cell_id\" onClick={onIdSort}>ID</td>\n              <td column=\"2\" className=\"table__cell table__cell_name\" onClick={onNameSort}>Name</td>\n              <td column=\"3\" className=\"table__cell table__cell_date\" onClick={onDateSort}>Date</td>\n            </tr>\n          </thead>\n          <tbody>\n\n            {tasks.map(task => <Task\n              key={task.id}\n              task={task}\n              taskId={task.id}\n              taskText={task.name}\n              taskDate={task.date}\n              removeTask={handleTaskDelete}\n              onTaskSave={handleTaskSave}\n            />)}\n\n          </tbody>\n        </table>\n\n      </section>\n\n    </main>\n\n  );\n}\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n\n    <footer className=\"footer\">\n      <p className=\"footer__text\">© Mikhailov Stanislav for Go Mobile 2020</p>\n    </footer>\n\n  );\n}\n","export const defaultTasks = [\n  {\n    id: 1,\n    name: 'Заверстать таск-менеджер',\n    date: '17.09.2020'\n  },\n  {\n    id: 2,\n    name: 'Написать фронт-логику',\n    date: '18.09.2020'\n  },\n  {\n    id: 3,\n    name: 'Разработать api',\n    date: '19.09.2020'\n  },\n  {\n    id: 4,\n    name: 'Связать api с MongoDB',\n    date: '20.09.2020'\n  },\n  {\n    id: 5,\n    name: 'Profit',\n    date: '21.09.2020'\n  }\n];\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport { defaultTasks } from '../utils/data.js';\n\nexport default function App() {\n\n  const [initialTasks, setInitialTasks] = React.useState(defaultTasks);\n  const [tasks, setTasks] = React.useState(defaultTasks);\n  const [fieldOfSort, setFieldOfSort] = React.useState({\n    sort: true,\n    data: tasks\n  });\n\n  function handleSubmit(data) {\n    const newTasks = data.concat(initialTasks);\n    setInitialTasks(newTasks);\n    setTasks(newTasks);\n  }\n\n  function handleSearch(string) {\n    const value = string.toLowerCase();\n    const newTasks = initialTasks.filter((t) => {\n      return (t.name.toLowerCase().includes(value) || t.date.toLowerCase().includes(value));\n    });\n    setTasks(newTasks);\n  }\n\n  function handleTaskDelete(task) {\n    const newTasks = initialTasks.filter((t) => t.id !== task.id);\n    setTasks(newTasks);\n    setInitialTasks(newTasks);\n  }\n\n  function handleTaskSave(task, data) {\n    const newTasks = initialTasks.map((t) => {\n      if (t.id === task.id) {\n        t.name = data.name;\n        t.date = data.date.split(/\\W/).join('.');\n      }\n      return t;\n    });\n    setTasks(newTasks);\n    setInitialTasks(newTasks);\n  }\n\n  function handleIdSort(tasks, method) {\n    const newTasks = tasks.sort((task1, task2) => {\n      return method ? task2.id - task1.id : task1.id - task2.id;\n    });\n    setFieldOfSort({\n      sort: !method,\n      data: newTasks\n    });\n  }\n\n  function handleNameSort(tasks, method) {\n    const newTasks = tasks.sort((task1, task2) => {\n      if (task1.name > task2.name) {\n        return method ? 1 : -1;\n      }\n      if (task1.name < task2.name) {\n        return method ? -1 : 1;\n      }\n      return 0;\n    });\n    setFieldOfSort({\n      sort: !method,\n      data: newTasks\n    });\n  }\n\n  function handleDateSort(tasks, method) {\n    const newTasks = tasks.sort((task1, task2) => {\n      let date1 = new Date(task1.date.split('.').reverse());\n      let date2 = new Date(task2.date.split('.').reverse());\n      return method ? date2 - date1 : date1 - date2;\n    });\n    setFieldOfSort({\n      sort: !method,\n      data: newTasks\n    });\n  }\n\n  return (\n    <div className=\"page\">\n\n      <Header />\n\n      <Main\n        tasks={tasks}\n        handleSubmit={handleSubmit}\n        handleSearch={handleSearch}\n        sortMethod={fieldOfSort.sort}\n        handleTaskDelete={handleTaskDelete}\n        handleTaskSave={handleTaskSave}\n        handleIdSort={handleIdSort}\n        handleNameSort={handleNameSort}\n        handleDateSort={handleDateSort}\n      />\n\n      <Footer />\n\n    </div>\n  );\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}